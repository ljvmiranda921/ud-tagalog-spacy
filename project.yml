title: "Training a POS Tagger and Dependency Parser for a Low-Resource Language (Tagalog)"
description: >
  This project trains a part-of-speech tagger and dependency parser for a
  low-resource language such as Tagalog. We will be using the
  [TRG](https://universaldependencies.org/treebanks/tl_trg/index.html) and
  [Ugnayan](https://universaldependencies.org/treebanks/tl_ugnayan/index.html)
  treebanks for this task. Since the number of sentences in each corpus is
  small, we'll need to evaluate our model using [10-fold cross
  validation](https://universaldependencies.org/release_checklist.html#data-split).
  How to implement this split will be demonstrated in this project
  (`scripts/kfold.py`). The cross validation results can be seen below:

  **TRG Treebank**

  |         | TOKEN_ACC | POS_ACC | MORPH_ACC | TAG_ACC | DEP_UAS | DEP_LAS |
  |---------|-----------|---------|-----------|---------|---------|---------|
  | 10-fold | 1.000     | 0.843   | 0.749     | 0.833   | 0.846   | 0.554   |
  | Ugnayan | 0.997     | 0.563   | 0.364     | 0.538   | 0.472   | 0.240   |


  **Ugnayan Treebank**

  |         | TOKEN_ACC | POS_ACC | MORPH_ACC | TAG_ACC | DEP_UAS | DEP_LAS |
  |---------|-----------|---------|-----------|---------|---------|---------|
  | 10-fold | 0.998     | 0.819   | 0.995     | 0.810   | 0.667   | 0.409   |
  | TRG     | 1.000     | 0.789   | 0.424     | 0.779   | 0.793   | 0.572   |

directories: ["assets", "corpus", "training", "metrics", "configs", "packages"]

vars:
  config: "default"
  gpu: -1
  lang: "tl"
  package_version: "0.0.0"
  trg_treebank: "UD_Tagalog-TRG"
  trg_data: "tl_trg-ud-test"
  trg_package: "ud_tl_trg"
  ugn_treebank: "UD_Tagalog-Ugnayan"
  ugn_data: "tl_ugnayan-ud-test"
  ugn_package: "ud_tl_ugnayan"

assets:
  - dest: "assets/${vars.trg_treebank}"
    description: "Treebank data for UD TRG"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.trg_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.ugn_treebank}"
    description: "Treebank data for UD Ugnayan"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.ugn_treebank}"
      branch: "master"
      path: ""

workflows:
  monolingual:
    - preprocess
    - split
    - train
    - evaluate-kfold
    - evaluate-treebank

commands:
  - name: preprocess
    help: "Convert the data to spaCy's format"
    script:
      - "mkdir -p corpus/${vars.trg_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.trg_treebank}/${vars.trg_data}.conllu
        corpus/${vars.trg_treebank}/
        --converter conllu
        --n-sents 1
        --merge-subtokens
      - "mkdir -p corpus/${vars.ugn_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.ugn_treebank}/${vars.ugn_data}.conllu
        corpus/${vars.ugn_treebank}/
        --converter conllu
        --n-sents 1
        --merge-subtokens
      - "mv corpus/${vars.trg_treebank}/${vars.trg_data}.spacy corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "mv corpus/${vars.ugn_treebank}/${vars.ugn_data}.spacy corpus/${vars.ugn_treebank}/ugn_raw.spacy"
    deps:
      - "assets/${vars.trg_treebank}/${vars.trg_data}.conllu"
      - "assets/${vars.ugn_treebank}/${vars.ugn_data}.conllu"
    outputs:
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"

  - name: split
    help: "Split the raw corpus into train and dev datasets (80/20)"
    script:
      - "python -m scripts.split corpus/${vars.trg_treebank}/trg_raw.spacy corpus/${vars.trg_treebank} --seed=42"
      - "python -m scripts.split corpus/${vars.ugn_treebank}/ugn_raw.spacy corpus/${vars.ugn_treebank} --seed=42"

  - name: train
    help: "Train ${vars.trg_treebank} and ${vars.ugn_treebank}"
    script:
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.trg_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.trg_treebank}/train.spacy
        --paths.dev corpus/${vars.trg_treebank}/dev.spacy
        --nlp.lang=tl
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.ugn_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.ugn_treebank}/train.spacy
        --paths.dev corpus/${vars.ugn_treebank}/dev.spacy
        --nlp.lang=tl
    deps:
      - "corpus/${vars.trg_treebank}/train.spacy"
      - "corpus/${vars.trg_treebank}/dev.spacy"
      - "corpus/${vars.ugn_treebank}/train.spacy"
      - "corpus/${vars.ugn_treebank}/dev.spacy"
      - "configs/${vars.config}.cfg"
    outputs:
      - "training/${vars.trg_treebank}/model-best"
      - "training/${vars.ugn_treebank}/model-best"

  - name: "evaluate-kfold"
    help: "Evaluate model using k-fold cross validation"
    script:
      - "python -m scripts.kfold corpus/${vars.trg_treebank}/trg_raw.spacy configs/${vars.config}.cfg --output metrics/trg_kfold.json"
      - "python -m scripts.kfold corpus/${vars.ugn_treebank}/ugn_raw.spacy configs/${vars.config}.cfg --output metrics/ugn_kfold.json"
    deps:
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"
      - "configs/${vars.config}.cfg"
    outputs:
      - "metrics/trg_kfold.json"
      - "metrics/ugn_kfold.json"

  - name: "evaluate-treebank"
    help: "Evaluate the treebank model across each other"
    script:
      - "python -m spacy evaluate training/${vars.trg_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/trg_model_on_ugn.json"
      - "python -m spacy evaluate training/${vars.ugn_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/ugn_model_on_trg.json"
    deps:
      - "training/${vars.trg_treebank}/model-best"
      - "training/${vars.ugn_treebank}/model-best"
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"
    outputs:
      - "metrics/trg_model_on_ugn.json"
      - "metrics/ugn_model_on_trg.json"

  - name: "package"
    help: "Package the trained models so it can be installed"
    script:
      - >-
        python -m spacy package
        training/${vars.trg_treebank}/model-best packages
        --name ${vars.trg_package}
        --version ${vars.package_version}
        --force
      - >-
        python -m spacy package
        training/${vars.ugn_treebank}/model-best packages
        --name ${vars.ugn_package}
        --version ${vars.package_version}
        --force
    deps:
      - "training/${vars.trg_treebank}/model-best"
      - "training/${vars.ugn_treebank}/model-best"
    outputs_no_cache:
      - "packages/${vars.lang}_${vars.trg_package}-${vars.package_version}/dist/${vars.lang}_${vars.trg_package}-${vars.package_version}.tar.gz"
      - "packages/${vars.lang}_${vars.ugn_package}-${vars.package_version}/dist/${vars.lang}_${vars.ugn_package}-${vars.package_version}.tar.gz"

  - name: "clean"
    help: "Remove intermediate files"
    script:
      - "rm -rf training/*"
      - "rm -rf corpus/*"
