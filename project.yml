title: "Training a POS Tagger and Dependency Parser for a Low-Resource Language (Tagalog)"
description: |
  This project trains a part-of-speech tagger and dependency parser for a
  low-resource language such as Tagalog. We will be using the
  [TRG](https://universaldependencies.org/treebanks/tl_trg/index.html) and
  [Ugnayan](https://universaldependencies.org/treebanks/tl_ugnayan/index.html)
  treebanks for this task. Since the number of sentences in each corpus is small,
  we'll need to evaluate our model using [10-fold cross
  validation](https://universaldependencies.org/release_checklist.html#data-split).
  How to implement this split will be demonstrated in this project
  (`scripts/kfold.py`). The cross validation results can be seen below.

  ### Monolingual evaluation

  Consists of k-fold cross validation and inter-treebank evaluation.

  **TRG Treebank**

  |         | TOKEN_ACC | POS_ACC | MORPH_ACC | TAG_ACC | DEP_UAS | DEP_LAS |
  |---------|-----------|---------|-----------|---------|---------|---------|
  | 10-fold | 1.000     | 0.843   | 0.749     | 0.833   | 0.846   | 0.554   |
  | Ugnayan | 0.997     | 0.563   | 0.364     | 0.538   | 0.472   | 0.240   |

  **Ugnayan Treebank**

  |         | TOKEN_ACC | POS_ACC | MORPH_ACC | TAG_ACC | DEP_UAS | DEP_LAS |
  |---------|-----------|---------|-----------|---------|---------|---------|
  | 10-fold | 0.998     | 0.819   | 0.995     | 0.810   | 0.667   | 0.409   |
  | TRG     | 1.000     | 0.789   | 0.424     | 0.779   | 0.793   | 0.572   |

  ### Cross-lingual evaluation

  Evaluating models trained from other typologically similar languages against
  the two `tl` treebanks.

  **TRG Treebank**

  |           | TOKEN_ACC | POS_ACC | MORPH_ACC | TAG_ACC | DEP_UAS | DEP_LAS |
  |-----------|-----------|---------|-----------|---------|---------|---------|
  | id-gsd    | 1.000     | 0.374   | 0.320     | 0.000   | 0.342   | 0.151   |
  | vi-vtb    | 1.000     | 0.306   | 0.423     | 0.000   | 0.309   | 0.143   |
  | ro-rrt    | 0.999     | 0.392   | 0.198     | 0.000   | 0.304   | 0.098   |
  | uk-iu     | 1.000     | 0.185   | 0.177     | 0.000   | 0.539   | 0.188   |
  | ca-ancora | 0.999     | 0.284   | 0.057     | 0.015   | 0.261   | 0.081   |

  **Ugnayan Treebank**

  |           | TOKEN_ACC | POS_ACC | MORPH_ACC | TAG_ACC | DEP_UAS | DEP_LAS |
  |-----------|-----------|---------|-----------|---------|---------|---------|
  | id-gsd    | 0.997     | 0.310   | 0.803     | 0.000   | 0.251   | 0.058   |
  | vi-vtb    | 0.997     | 0.256   | 0.986     | 0.000   | 0.199   | 0.049   |
  | ro-rrt    | 0.992     | 0.332   | 0.275     | 0.000   | 0.279   | 0.085   |
  | uk-iu     | 0.998     | 0.151   | 0.123     | 0.000   | 0.300   | 0.084   |
  | ca-ancora | 0.994     | 0.267   | 0.301     | 0.025   | 0.242   | 0.041   |

directories: ["assets", "corpus", "training", "metrics", "configs", "packages", "models"]

vars:
  config: "default"
  gpu: -1
  lang: "tl"
  package_version: "0.0.0"
  trg_treebank: "UD_Tagalog-TRG"
  trg_data: "tl_trg-ud-test"
  trg_package: "ud_tl_trg"
  ugn_treebank: "UD_Tagalog-Ugnayan"
  ugn_data: "tl_ugnayan-ud-test"
  ugn_package: "ud_tl_ugnayan"
  id_treebank: "UD_Indonesian-GSD"
  id_train: "id_gsd-ud-train"
  id_dev: "id_gsd-ud-dev"
  id_package: "ud_id_gsd"
  uk_treebank: "UD_Ukrainian-IU"
  uk_train: "uk_iu-ud-train"
  uk_dev: "uk_iu-ud-dev"
  uk_package: "ud_uk_iu"
  vi_treebank: "UD_Vietnamese-VTB"
  vi_train: "vi_vtb-ud-train"
  vi_dev: "vi_vtb-ud-dev"
  vi_package: "ud_vi_vtb"
  ro_treebank: "UD_Romanian-RRT"
  ro_train: "ro_rrt-ud-train"
  ro_dev: "ro_rrt-ud-dev"
  ro_package: "ud_ro_rrt"
  ca_treebank: "UD_Catalan-AnCora"
  ca_train: "ca_ancora-ud-train"
  ca_dev: "ca_ancora-ud-dev"
  ca_package: "ud_ca_ancora"

assets:
  - dest: "assets/${vars.trg_treebank}"
    description: "Treebank data for UD_Tagalog-TRG"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.trg_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.ugn_treebank}"
    description: "Treebank data for UD_Tagalog-Ugnayan"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.ugn_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.id_treebank}"
    description: "Treebank data for UD_Indonesian-GSD"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.id_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.uk_treebank}"
    description: "Treebank data for UD_Ukrainian-IU"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.uk_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.vi_treebank}"
    description: "Treebank data for UD_Vietnamese-VTB"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.vi_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.ro_treebank}"
    description: "Treebank data for UD_Romanian-RRT"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.ro_treebank}"
      branch: "master"
      path: ""
  - dest: "assets/${vars.ca_treebank}"
    description: "Treebank data for UD_Catalan-AnCora"
    git:
      repo: "https://github.com/UniversalDependencies/${vars.ca_treebank}"
      branch: "master"
      path: ""

workflows:
  monolingual:
    - install
    - preprocess-tl
    - split
    - train-tl
    - evaluate-kfold
    - evaluate-treebank
  crosslingual:
    - install
    - preprocess-foreign
    - train-foreign
    - evaluate-foreign-trg
    - evaluate-foreign-ugn

commands:
  - name: "install"
    help: "Install dependencies"
    script:
      - "pip install --user -r requirements.txt"
  - name: preprocess-tl
    help: "Convert the data to spaCy's format"
    script:
      - "mkdir -p corpus/${vars.trg_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.trg_treebank}/${vars.trg_data}.conllu
        corpus/${vars.trg_treebank}/
        --converter conllu
        --n-sents 1
        --merge-subtokens
      - "mkdir -p corpus/${vars.ugn_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.ugn_treebank}/${vars.ugn_data}.conllu
        corpus/${vars.ugn_treebank}/
        --converter conllu
        --n-sents 1
        --merge-subtokens
      - "mv corpus/${vars.trg_treebank}/${vars.trg_data}.spacy corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "mv corpus/${vars.ugn_treebank}/${vars.ugn_data}.spacy corpus/${vars.ugn_treebank}/ugn_raw.spacy"
    deps:
      - "assets/${vars.trg_treebank}/${vars.trg_data}.conllu"
      - "assets/${vars.ugn_treebank}/${vars.ugn_data}.conllu"
    outputs:
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"

  - name: preprocess-foreign
    help: "Convert foreign treebanks to spaCy's format"
    script:
      - "mkdir -p corpus/${vars.id_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.id_treebank}/${vars.id_train}.conllu
        corpus/${vars.id_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - >-
        python -m spacy convert 
        assets/${vars.id_treebank}/${vars.id_dev}.conllu
        corpus/${vars.id_treebank}/
        --converter conllu
        --merge-subtokens
        --n-sents 10
      - "mkdir -p corpus/${vars.uk_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.uk_treebank}/${vars.uk_train}.conllu
        corpus/${vars.uk_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - >-
        python -m spacy convert 
        assets/${vars.uk_treebank}/${vars.uk_dev}.conllu
        corpus/${vars.uk_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - "mkdir -p corpus/${vars.vi_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.vi_treebank}/${vars.vi_train}.conllu
        corpus/${vars.vi_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - >-
        python -m spacy convert 
        assets/${vars.vi_treebank}/${vars.vi_dev}.conllu
        corpus/${vars.vi_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - "mkdir -p corpus/${vars.ro_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.ro_treebank}/${vars.ro_train}.conllu
        corpus/${vars.ro_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - >-
        python -m spacy convert 
        assets/${vars.ro_treebank}/${vars.ro_dev}.conllu
        corpus/${vars.ro_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - "mkdir -p corpus/${vars.ca_treebank}"
      - >-
        python -m spacy convert 
        assets/${vars.ca_treebank}/${vars.ca_train}.conllu
        corpus/${vars.ca_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
      - >-
        python -m spacy convert 
        assets/${vars.ca_treebank}/${vars.ca_dev}.conllu
        corpus/${vars.ca_treebank}/
        --converter conllu
        --n-sents 10
        --merge-subtokens
    deps:
      - "assets/${vars.id_treebank}/${vars.id_train}.conllu"
      - "assets/${vars.id_treebank}/${vars.id_dev}.conllu"
      - "assets/${vars.uk_treebank}/${vars.uk_train}.conllu"
      - "assets/${vars.uk_treebank}/${vars.uk_dev}.conllu"
      - "assets/${vars.vi_treebank}/${vars.vi_train}.conllu"
      - "assets/${vars.vi_treebank}/${vars.vi_dev}.conllu"
      - "assets/${vars.ro_treebank}/${vars.ro_train}.conllu"
      - "assets/${vars.ro_treebank}/${vars.ro_dev}.conllu"
      - "assets/${vars.ca_treebank}/${vars.ca_train}.conllu"
      - "assets/${vars.ca_treebank}/${vars.ca_dev}.conllu"
    outputs:
      - "corpus/${vars.id_treebank}/${vars.id_train}.spacy"
      - "corpus/${vars.id_treebank}/${vars.id_dev}.spacy"
      - "corpus/${vars.uk_treebank}/${vars.uk_train}.spacy"
      - "corpus/${vars.uk_treebank}/${vars.uk_dev}.spacy"
      - "corpus/${vars.vi_treebank}/${vars.vi_train}.spacy"
      - "corpus/${vars.vi_treebank}/${vars.vi_dev}.spacy"
      - "corpus/${vars.ro_treebank}/${vars.ro_train}.spacy"
      - "corpus/${vars.ro_treebank}/${vars.ro_dev}.spacy"
      - "corpus/${vars.ca_treebank}/${vars.ca_train}.spacy"
      - "corpus/${vars.ca_treebank}/${vars.ca_dev}.spacy"

  - name: split
    help: "Split the raw corpus into train and dev datasets (80/20)"
    script:
      - "python -m scripts.split corpus/${vars.trg_treebank}/trg_raw.spacy corpus/${vars.trg_treebank} --seed=42"
      - "python -m scripts.split corpus/${vars.ugn_treebank}/ugn_raw.spacy corpus/${vars.ugn_treebank} --seed=42"

  - name: train-tl
    help: "Train ${vars.trg_treebank} and ${vars.ugn_treebank}"
    script:
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.trg_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.trg_treebank}/train.spacy
        --paths.dev corpus/${vars.trg_treebank}/dev.spacy
        --nlp.lang=tl
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.ugn_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.ugn_treebank}/train.spacy
        --paths.dev corpus/${vars.ugn_treebank}/dev.spacy
        --nlp.lang=tl
    deps:
      - "corpus/${vars.trg_treebank}/train.spacy"
      - "corpus/${vars.trg_treebank}/dev.spacy"
      - "corpus/${vars.ugn_treebank}/train.spacy"
      - "corpus/${vars.ugn_treebank}/dev.spacy"
      - "configs/${vars.config}.cfg"
    outputs:
      - "training/${vars.trg_treebank}/model-best"
      - "training/${vars.ugn_treebank}/model-best"

  - name: train-foreign
    help: "Train model from foreign treebanks"
    script:
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.id_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.id_treebank}/${vars.id_train}.spacy
        --paths.dev corpus/${vars.id_treebank}/${vars.id_dev}.spacy
        --nlp.lang=id
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.uk_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.uk_treebank}/${vars.uk_train}.spacy
        --paths.dev corpus/${vars.uk_treebank}/${vars.uk_dev}.spacy
        --nlp.lang=uk
      - >-
        python -m spacy train
        configs/vi_${vars.config}.cfg
        --output training/${vars.vi_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.vi_treebank}/${vars.vi_train}.spacy
        --paths.dev corpus/${vars.vi_treebank}/${vars.vi_dev}.spacy
        --nlp.lang=vi
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.ro_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.ro_treebank}/${vars.ro_train}.spacy
        --paths.dev corpus/${vars.ro_treebank}/${vars.ro_dev}.spacy
        --nlp.lang=ro
      - >-
        python -m spacy train
        configs/${vars.config}.cfg
        --output training/${vars.ca_treebank}
        --gpu-id ${vars.gpu}
        --paths.train corpus/${vars.ca_treebank}/${vars.ca_train}.spacy
        --paths.dev corpus/${vars.ca_treebank}/${vars.ca_dev}.spacy
        --nlp.lang=ca
    deps:
      - "corpus/${vars.id_treebank}/${vars.id_train}.spacy"
      - "corpus/${vars.id_treebank}/${vars.id_dev}.spacy"
      - "corpus/${vars.uk_treebank}/${vars.uk_train}.spacy"
      - "corpus/${vars.uk_treebank}/${vars.uk_dev}.spacy"
      - "corpus/${vars.vi_treebank}/${vars.vi_train}.spacy"
      - "corpus/${vars.vi_treebank}/${vars.vi_dev}.spacy"
      - "corpus/${vars.ro_treebank}/${vars.ro_train}.spacy"
      - "corpus/${vars.ro_treebank}/${vars.ro_dev}.spacy"
      - "corpus/${vars.ca_treebank}/${vars.ca_train}.spacy"
      - "corpus/${vars.ca_treebank}/${vars.ca_dev}.spacy"
      - "configs/${vars.config}.cfg"
    outputs:
      - "training/${vars.id_treebank}/model-best"
      - "training/${vars.uk_treebank}/model-best"
      - "training/${vars.vi_treebank}/model-best"
      - "training/${vars.ro_treebank}/model-best"
      - "training/${vars.ca_treebank}/model-best"

  - name: "evaluate-kfold"
    help: "Evaluate model using k-fold cross validation"
    script:
      - "python -m scripts.kfold corpus/${vars.trg_treebank}/trg_raw.spacy configs/${vars.config}.cfg --output metrics/trg_kfold.json"
      - "python -m scripts.kfold corpus/${vars.ugn_treebank}/ugn_raw.spacy configs/${vars.config}.cfg --output metrics/ugn_kfold.json"
    deps:
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"
      - "configs/${vars.config}.cfg"
    outputs:
      - "metrics/trg_kfold.json"
      - "metrics/ugn_kfold.json"

  - name: "evaluate-treebank"
    help: "Evaluate the treebank model across each other"
    script:
      - "python -m spacy evaluate training/${vars.trg_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/trg_model_on_ugn.json"
      - "python -m spacy evaluate training/${vars.ugn_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/ugn_model_on_trg.json"
    deps:
      - "training/${vars.trg_treebank}/model-best"
      - "training/${vars.ugn_treebank}/model-best"
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"
    outputs:
      - "metrics/trg_model_on_ugn.json"
      - "metrics/ugn_model_on_trg.json"

  - name: "evaluate-foreign-trg"
    help: "Evaluate foreign treebanks on the Tagalog TRG treebank"
    script:
      - "python -m spacy evaluate training/${vars.id_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/trg_${vars.id_treebank}.json"
      - "python -m spacy evaluate training/${vars.uk_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/trg_${vars.uk_treebank}.json"
      - "python -m spacy evaluate training/${vars.vi_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/trg_${vars.vi_treebank}.json"
      - "python -m spacy evaluate training/${vars.ro_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/trg_${vars.ro_treebank}.json"
      - "python -m spacy evaluate training/${vars.ca_treebank}/model-best corpus/${vars.trg_treebank}/trg_raw.spacy -o metrics/trg_${vars.ca_treebank}.json"
    deps:
      - "training/${vars.id_treebank}/model-best"
      - "training/${vars.uk_treebank}/model-best"
      - "training/${vars.vi_treebank}/model-best"
      - "training/${vars.ro_treebank}/model-best"
      - "training/${vars.ca_treebank}/model-best"
      - "corpus/${vars.trg_treebank}/trg_raw.spacy"
    outputs:
      - "metrics/trg_${vars.id_treebank}.json"
      - "metrics/trg_${vars.uk_treebank}.json"
      - "metrics/trg_${vars.vi_treebank}.json"
      - "metrics/trg_${vars.ro_treebank}.json"
      - "metrics/trg_${vars.ca_treebank}.json"

  - name: "evaluate-foreign-ugn"
    help: "Evaluate foreign treebanks on the Tagalog Ugnayan treebank"
    script:
      - "python -m spacy evaluate training/${vars.id_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/ugn_${vars.id_treebank}.json"
      - "python -m spacy evaluate training/${vars.uk_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/ugn_${vars.uk_treebank}.json"
      - "python -m spacy evaluate training/${vars.vi_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/ugn_${vars.vi_treebank}.json"
      - "python -m spacy evaluate training/${vars.ro_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/ugn_${vars.ro_treebank}.json"
      - "python -m spacy evaluate training/${vars.ca_treebank}/model-best corpus/${vars.ugn_treebank}/ugn_raw.spacy -o metrics/ugn_${vars.ca_treebank}.json"
    deps:
      - "training/${vars.id_treebank}/model-best"
      - "training/${vars.uk_treebank}/model-best"
      - "training/${vars.vi_treebank}/model-best"
      - "training/${vars.ro_treebank}/model-best"
      - "training/${vars.ca_treebank}/model-best"
      - "corpus/${vars.ugn_treebank}/ugn_raw.spacy"
    outputs:
      - "metrics/ugn_${vars.id_treebank}.json"
      - "metrics/ugn_${vars.uk_treebank}.json"
      - "metrics/ugn_${vars.vi_treebank}.json"
      - "metrics/ugn_${vars.ro_treebank}.json"
      - "metrics/ugn_${vars.ca_treebank}.json"

  - name: "package-tl"
    help: "Package the trained Tagalog models so they can be installed"
    script:
      - >-
        python -m spacy package
        training/${vars.trg_treebank}/model-best packages
        --name ${vars.trg_package}
        --version ${vars.package_version}
        --force
      - >-
        python -m spacy package
        training/${vars.ugn_treebank}/model-best packages
        --name ${vars.ugn_package}
        --version ${vars.package_version}
        --force
      - sh -c "mv packages/*/dist/*.tar.gz models/"
    deps:
      - "training/${vars.trg_treebank}/model-best"
      - "training/${vars.ugn_treebank}/model-best"
    outputs_no_cache:
      - "models/${vars.lang}_${vars.trg_package}-${vars.package_version}.tar.gz"
      - "models/${vars.lang}_${vars.ugn_package}-${vars.package_version}.tar.gz"

  - name: "package-foreign"
    help: "Package the trained foreign models so they can be installed"
    script:
      - >-
        python -m spacy package
        training/${vars.id_treebank}/model-best packages
        --name ${vars.id_package}
        --version ${vars.package_version}
        --force
      - >-
        python -m spacy package
        training/${vars.vi_treebank}/model-best packages
        --name ${vars.vi_package}
        --version ${vars.package_version}
        --force
      - >-
        python -m spacy package
        training/${vars.uk_treebank}/model-best packages
        --name ${vars.uk_package}
        --version ${vars.package_version}
        --force
      - >-
        python -m spacy package
        training/${vars.ro_treebank}/model-best packages
        --name ${vars.ro_package}
        --version ${vars.package_version}
        --force
      - >-
        python -m spacy package
        training/${vars.ca_treebank}/model-best packages
        --name ${vars.ca_package}
        --version ${vars.package_version}
        --force
      - sh -c "mv packages/*/dist/*.tar.gz models/"
    deps:
      - "training/${vars.id_treebank}/model-best"
      - "training/${vars.vi_treebank}/model-best"
      - "training/${vars.uk_treebank}/model-best"
      - "training/${vars.ro_treebank}/model-best"
      - "training/${vars.ca_treebank}/model-best"
    outputs_no_cache:
      - "models/${vars.lang}_${vars.id_package}-${vars.package_version}.tar.gz"
      - "models/${vars.lang}_${vars.vi_package}-${vars.package_version}.tar.gz"
      - "models/${vars.lang}_${vars.uk_package}-${vars.package_version}.tar.gz"
      - "models/${vars.lang}_${vars.ro_package}-${vars.package_version}.tar.gz"
      - "models/${vars.lang}_${vars.ca_package}-${vars.package_version}.tar.gz"

  - name: "clean"
    help: "Remove intermediate files"
    script:
      - "rm -rf training/*"
      - "rm -rf corpus/*"

  - name: "install-models"
    help: "Install all models from the models/ directory"
    script:
      - "pip install -r requirements-models.txt"
      - "python -m spacy info"
